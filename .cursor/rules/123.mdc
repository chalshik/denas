---
description: 
globs: 
alwaysApply: true
---
This project is a monorepo with both frontend and backend code.

- The backend is built with **FastAPI** (Python), using modular routers and pydantic models for request and response validation.
- API endpoints follow RESTful design with clear separation of concerns.
- Business logic is not mixed with routes; routes call service-layer functions.
- Database interactions use SQLAlchemy (or your ORM of choice).
- Asynchronous programming is preferred with `async def`.
- To run backend used docker-compose file.

- The frontend uses **Hero UI library v2.7.8**, built with React and Tailwind CSS.
- Components should be reusable, styled with Hero UI conventions.
- The UI uses hooks for state and effect management, with attention to accessibility and responsiveness.
- Shared components and utility hooks are placed under `/oms-sf-frontend/app/components` and `/oms-sf-frontend/app/hooks`.

General rules:
- Follow DRY (Don't Repeat Yourself) and SOLID principles.
- Maintain consistent code formatting (black/isort for Python, Prettier/ESLint for JS/TS).
- Favor type hints in Python and TypeScript where possible.
- Write clear docstrings (Python) and JSDoc (JS/TS) for all exported functions.
- When unsure, prefer readability and simplicity over cleverness.

├── app/
│   ├── layout.tsx
│   ├── page.tsx                     # Главная страница
│   ├── (auth)/                      # Группа для логина/регистрации
│   │   ├── login/page.tsx
│   │   ├── register/page.tsx
│   ├── (shop)/                      # Группа публичных страниц
│   │   ├── products/
│   │   │   ├── [id]/page.tsx        # Детали товара
│   │   │   └── page.tsx             # Каталог товаров
│   │   ├── wishlist/page.tsx
│   │   ├── checkout/page.tsx
│   ├── (account)/                  # Личный кабинет пользователя
│   │   ├── orders/page.tsx
│   │   ├── profile/page.tsx
│   ├── (admin)/                    # Админ-панель
│   │   ├── layout.tsx              # Сайдбар админки
│   │   ├── products/page.tsx
│   │   ├── chats/page.tsx
│   │   ├── analytics/page.tsx
│   │   └── settings/page.tsx
│
├── components/
│   ├── layout/                     # Навбар, футер, сайдбар
│   ├── product/                    # Карточка товара, фильтры и т.п.
│   ├── wishlist/                       # Элементы корзины
│   └── forms/                      # Формы логина, регистрации и т.п.
│
├── lib/                            # Утилиты
│   ├── auth.ts                     # Аутентификация (getSession и т.п.)
│   ├── db.ts                       # Подключение к БД (Supabase)
│   ├── stripe.ts                   # Stripe utils
│   └── fetcher.ts                  # SWR/React Query fetcher
│
├── public/                         # Статичные изображения
│
├── styles/                         # Tailwind config, globals.css
│
├── middleware.ts                   # Middleware для auth route guards
├── next.config.js
└── tsconfig.json


